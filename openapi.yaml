openapi: 3.0.3
info:
  title: Short Link Service
  version: 1.0.0
tags:
  - name: links
    description: Everything about your Links
  - name: user
    description: Operations about user
paths:
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: { }
  /user/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        200:
          description: successful logout
          content: { }
  /l:
    post:
      tags:
        - links
      summary: "Add a new link to the service"
      operationId: "CreateItem"
      requestBody:
        description: "Link object that needs to be added to the service"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
      responses:
        "201":
          description: "Link created"
        "405":
          description: "Invalid input"
      security:
        - api_key: []
  /l/{link}:
    get:
      tags:
        - link
      summary: "Find link by hash"
      operationId: "GetLink"
      parameters:
        - name: hash
          in: path
          description: "Hash of link to return"
          required: true
          schema:
            type: string
      responses:
        302:
          description: "Go to location"
          headers:
            Location:
              schema:
                type: string
        404:
          description: Link not found
          content: { }
    put:
      tags:
        - link
      summary: "Updates a link in the service with form data"
      operationId: "UpdateLink"
      parameters:
        - name: hash
          in: path
          description: "ID of item that needs to be updated"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
      responses:
        405:
          description: "Invalid input"
          content: { }
      security:
        - api_key: []
    delete:
      tags:
        - link
      summary: "Deletes a link"
      operationId: "DeleteLink"
      parameters:
        - name: hash
          in: path
          description: "Link id to delete"
          required: true
          schema:
            type: string
      responses:
        400:
          description: "Invalid Hash supplied"
          content: { }
        404:
          description: "Link not found"
          content: { }
      security:
        - api_key: []
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
    Link:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hash:
          type: string
        link:
          type: string
        count:
          type: integer
          format: int64
        owner_id:
          type: integer
          format: int64
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header

